[DEFAULT]
# This character generator has two modes: [enhanced] and [classic].
# See the handbook for more information
# This setting can be overriden with CL options.
generatorMode=classic

# AD&D ability scores are in the RAW text differentiated between male / female.  Across all races, females have certain abilities capped slightly lower.
# Setting enforceSexAbilities to [yes] turns this on, and sexual disparity / racial disparity in abilities WILL be enforced.
# Setting enforceSexAbilities to [no] turns this off, and sexual disparity / racial disparity in abilities WILL NOT be enforced. Smash the patriarchy.
# Recommended setting: [no]
enforceSexAbilities=no
enforceRacialAbilities=yes

# AD&D classes are in the RAW text restricted by race.  This was deprecated in later versions of D&D.
# Setting ignoreRaceRestrictions to [yes] turns this on, and races/class restriction WILL be enforced.
# Setting ignoreRaceRestrictions to [no] turns this off, and races/class restriction WILL NOT be enforced.
# Recommended setting: [yes]
ignoreRaceRestrictions=no

# AD&D encourages characters to always roll their stats, instead of using stat arrays as in later versions.  This can lead to underpowered characters.
# Setting minimumReroll to an integer value sets a floor for the combined ability score of a character.
# Recommended setting: [35]
minimumReroll=35

# enforceFloorValues forces atleast the number defined in the Class files to be generated.  This ensures that each class will be represented in the output.
# Setting enforceFloorValues to [yes] turns this on, and at least the floor value of characters WILL be generated
# Setting enforceFloorValues to [no] turns this off, and at least the floor value of characters WILL NOT be generated
enforceFloorValues=yes

# minEnforceFloorVals sets the number of characters generated 

# Roll method determines the method to use to roll statistics.
# Valid settings: [roll4drop1] [roll3]
# Recommended setting: [roll4drop1]
rollMethod=roll4drop1


# AD&D classes have ability requirements. 'Prestige' classes (druid, ranger, paladin, illusionist, monk*) have stringent ability requirements.
# Setting enforceAbilityScores to [yes] turns this on, and characters WILL be given an ability score bump if they are under the class prerequisite.
# Setting enforceAbilityScores to [no] turns this off, and characters WILL NOT be given an ability score bump if they are under the class prerequisite.
# Recommended setting: [yes] 
enforceAbilityScores=yes

# charGenMode determines if the generator should randomly select character class according to the below weights.
# Setting charGenMode to [weightedRandom] turns this on, and causes the below charactersGenerated, basicClassWeight, and prestigeClassWeight parameters to be used.  <classtype>ClassMin will set a minimum number of each to appear
# Setting charGenMode to [forced] turns this off, and causes the generator to use the below <class>Count parameters to be used instead.
# Setting charGenMode to [random] will cause the character generator to roll stats first, then randomly select from a valid class.  charactersGenerated will still be used.  YMMV, classes with high requirements will be unlikely to appear in the generated file.
# Recommended setting: [random]
charGenMode=forced

# charactersGenerated determines the number of characters generated by the generator.  Can be overriden with CL options.
# This setting is only used if charGenMode is set to [random].
# Recommended setting: [30].  Your mileage may vary.
charactersGenerated=30

# <classtype>ClassWeight determines the weights applied to class selection by the generator, nothing fancy.
# This setting is only used if charGenMode is set to [random]
# Recommended settings: basicClassWeight=[7] prestigeClassWeight=[2].  Your mileage may vary.
basicClassWeight=7
prestigeClassWeight=2

# <classtype>ClassMin determines the minimum number of each class that will appear when using weightedRandom gen mode 
# Characters are rolled first, and if the minimums are not applied, basic classes will be removed to make room for prestige classes (or vice versa)
# Recommended settings: basicClassMin=[0] prestigeClassMin=[3]
basicClassMin=0
prestigeClassMin=5

# <class>Count determines the number of that class generated.
# Note to anyone extending this application: you'll need to add in your own classes below if you want them generated using this mode.
# This setting is only used if charGenMode is set to [random].
# Recommended settings: use the random generator, more fun that way :)
basicClassCount=20
prestigeClassCount=0

# OutputMode determines if the output is JSON (sent to HTTP server) or HTML (static web pages)
# Valid Values <html> and <json> 
outputMode=json